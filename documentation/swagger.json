{
    "openapi": "3.0.0",
    "paths": {
      "/v1/decisions": {
        "post": {
          "operationId": "DecisionsController_collectDecisions",
          "parameters": [
            {
              "name": "x-correlation-id",
              "in": "header",
              "description": "Identifiant de correlation",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "Décision intègre au format wordperfect et metadonnées associées.",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CollectDto"
                }
              }
            }
          },
          "responses": {
            "202": {
              "description": "La requête a été acceptée et va être traitée."
            },
            "400": {
              "description": "Le format des métadonnées est incorrect et/ou le fichier n'est pas au bon format."
            },
            "503": {
              "description": "Une erreur inattendue liée à une dépendance de l'API a été rencontrée. "
            }
          },
          "tags": [
            "Collect"
          ]
        }
      },
      "/v1/health": {
        "get": {
          "operationId": "HealthController_check",
          "parameters": [],
          "responses": {
            "200": {
              "description": "The Health Check is successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "ok"
                      },
                      "info": {
                        "type": "object",
                        "example": {
                          "database": {
                            "status": "up"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "error": {
                        "type": "object",
                        "example": {
  
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "details": {
                        "type": "object",
                        "example": {
                          "database": {
                            "status": "up"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The Health Check is not successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "info": {
                        "type": "object",
                        "example": {
                          "database": {
                            "status": "up"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "error": {
                        "type": "object",
                        "example": {
                          "redis": {
                            "status": "down",
                            "message": "Could not connect"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nullable": true
                      },
                      "details": {
                        "type": "object",
                        "example": {
                          "database": {
                            "status": "up"
                          },
                          "redis": {
                            "status": "down",
                            "message": "Could not connect"
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "info": {
      "title": "API JuriTJ",
      "description": "Documentation de l'API JuriTJ, qui permet la collecte, le traitement et la mise en Open Data de décisions de tribunaux judiciaires.",
      "version": "1.0",
      "contact": {
  
      }
    },
    "tags": [
      {
        "name": "Collect",
        "description": ""
      }
    ],
    "servers": [],
    "components": {
      "schemas": {
        "PresidentDto": {
          "type": "object",
          "properties": {
            "fonction": {
              "type": "string",
              "description": "Fonction du président de jugement",
              "example": "president"
            },
            "nom": {
              "type": "string",
              "description": "Nom du président de jugement",
              "example": "Nom Presidente"
            },
            "prenom": {
              "type": "string",
              "description": "Prénom du président de jugement",
              "example": "Prenom Presidente"
            },
            "civilite": {
              "type": "string",
              "description": "Civilité du président de jugement",
              "example": "Mme."
            }
          },
          "required": [
            "fonction",
            "nom"
          ]
        },
        "DecisionAssocieeDto": {
          "type": "object",
          "properties": {
            "numeroRegistre": {
              "type": "string",
              "description": "Numéro de registre de la décision associée",
              "example": "A"
            },
            "numeroRoleGeneral": {
              "type": "string",
              "description": "Numéro RG (Rôle Général) du dossier. Année sur deux chiffres séparé par un «/» d’un numéro à cinq chiffres (0 non significatifs présents). Au format : ^[0-9]{2}/[0-9]{5}$",
              "example": "01/12345"
            },
            "idJuridiction": {
              "type": "string",
              "description": "Identifiant de la juridiction émettrice propre au système d’information originel pour la décision associée. Au format ^TJ[0-9]{5}$",
              "example": "TJ00000"
            },
            "date": {
              "type": "string",
              "description": "Date de la décision associée. Au format AAAAMMJJ",
              "example": "20240120"
            },
            "idDecision": {
              "type": "string",
              "description": "Identifiant de la décision associée dans le système source WinCI-TGI",
              "example": "idExemple"
            }
          },
          "required": [
            "numeroRegistre",
            "numeroRoleGeneral",
            "idJuridiction",
            "date"
          ]
        },
        "PartieDto": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type du partie de la décision",
              "enum": [
                "PP",
                "PM",
                "AA"
              ],
              "example": "PP"
            },
            "nom": {
              "type": "string",
              "description": "Nom du partie de la décision",
              "example": "nom Partie"
            },
            "prenom": {
              "type": "string",
              "description": "Prénom du partie de la décision",
              "example": "Prenom"
            },
            "civilite": {
              "type": "string",
              "description": "Civilité du partie de la décision",
              "example": "civilité"
            },
            "qualite": {
              "type": "string",
              "description": "Qualité du partie de la décision",
              "enum": [
                "F",
                "G",
                "I",
                "J",
                "K",
                "L",
                "M",
                "N"
              ],
              "example": "Qualité"
            }
          },
          "required": [
            "type",
            "nom"
          ]
        },
        "MetadonneesDto": {
          "type": "object",
          "properties": {
            "nomJuridiction": {
              "type": "string",
              "description": "Intitulé de la juridiction émettrice propre au système d’information originel",
              "example": "Juridictions civiles de première instance"
            },
            "idJuridiction": {
              "type": "string",
              "description": "Identifiant de la juridiction émettrice propre au système d’information originel. Au format ^TJ[0-9]{5}$",
              "example": "TJ75011"
            },
            "codeJuridiction": {
              "type": "string",
              "description": "Code de la juridiction émettrice propre au système d’information originel.",
              "example": "Code juridiction"
            },
            "numeroRegistre": {
              "type": "string",
              "description": "Numéro de registre",
              "example": "A"
            },
            "numeroRoleGeneral": {
              "type": "string",
              "description": "Numéro RG (Rôle Général) du dossier. Année sur deux chiffres séparé par un «/» d’un numéro à cinq chiffres (0 non significatifs présents). Au format : ^[0-9]{2}/[0-9]{5}$",
              "example": "01/12345"
            },
            "numeroMesureInstruction": {
              "type": "string",
              "description": "Numéro de la mesure d'instruction",
              "example": [
                "AZERTYUIOP"
              ]
            },
            "codeService": {
              "type": "string",
              "description": "Identifiant du service de la juridiction. Au format: ^[\\S]{2}$",
              "example": "0A"
            },
            "libelleService": {
              "type": "string",
              "description": "Libellé du service de la juridiction",
              "example": "Libelle de service"
            },
            "dateDecision": {
              "type": "string",
              "description": "Date de rendu de la décision. Au format : AAAAMMJJ",
              "example": "20240120"
            },
            "codeDecision": {
              "type": "string",
              "description": "Code du type de décision. Au format : ^[0-9a-zA-Z]{3}$",
              "example": "55C"
            },
            "libelleCodeDecision": {
              "type": "string",
              "description": "Libellé du type de décision",
              "example": "some libelle code decision / endCaseCode"
            },
            "president": {
              "description": "Information sur le président de la formation du jugement",
              "example": {
                "fonction": "president",
                "nom": "Nom Presidente",
                "prenom": "Prenom Presidente",
                "civilite": "Mme."
              },
              "allOf": [
                {
                  "$ref": "#/components/schemas/PresidentDto"
                }
              ]
            },
            "decisionAssociee": {
              "description": "Décision intègre chainée à la décision",
              "example": {
                "numeroRegistre": "A",
                "numeroRoleGeneral": "01/12345",
                "idJuridiction": "TJ00000",
                "date": "20240120",
                "idDecision": "TJ00001"
              },
              "allOf": [
                {
                  "$ref": "#/components/schemas/DecisionAssocieeDto"
                }
              ]
            },
            "parties": {
              "description": "Liste des parties de la décision",
              "example": [
                {
                  "type": "PP",
                  "nom": "nom Partie"
                },
                {
                  "type": "PP",
                  "nom": "nom Partie"
                }
              ],
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PartieDto"
              }
            },
            "sommaire": {
              "type": "string",
              "description": "Résumé de la décision intègre",
              "example": "Exemple de sommaire"
            },
            "codeNAC": {
              "type": "string",
              "description": "Code NAC de la décision. Au format : ^[0-9a-zA-Z]{3}$",
              "example": "11F"
            },
            "libelleNAC": {
              "type": "string",
              "description": "Libellé du code NAC de la décision",
              "example": "Demande en dommages-intérêts contre un organisme"
            },
            "codeNature": {
              "type": "string",
              "description": "Complément d'information du code NAC. Au format : ^[0-9a-zA-Z ]{0,2}$",
              "example": "6C"
            },
            "libelleNature": {
              "type": "string",
              "description": "Libellé du code de nature particulière",
              "example": "Autres demandes en matière de frais et dépens"
            },
            "decisionPublique": {
              "type": "boolean",
              "description": "Caractère public de la décision",
              "example": true
            },
            "recommandationOccultation": {
              "type": "string",
              "description": "Utilisation des recommandations pour l'occultation",
              "enum": [
                "aucune",
                "conforme",
                "substituant",
                "complément"
              ],
              "example": "substituant"
            },
            "occultationComplementaire": {
              "type": "string",
              "description": "Champ libre contenant les demandes d'occultations complémentaires",
              "example": "Exemple d'occultation complémentaire"
            },
            "selection": {
              "type": "boolean",
              "description": "Selection d'une décision",
              "example": false
            },
            "matiereDeterminee": {
              "type": "boolean",
              "description": "Matière déterminée d'une décision",
              "example": true
            },
            "pourvoiLocal": {
              "type": "boolean",
              "description": "Pourvoi local d'une décision",
              "example": false
            },
            "pourvoiCourDeCassation": {
              "type": "boolean",
              "description": "Pourvoi de Cour de Cassation d'une décision",
              "example": false
            },
            "debatPublic": {
              "type": "boolean",
              "description": "Débat public d'une décision",
              "example": true
            },
            "idDecision": {
              "type": "string",
              "description": "Identifiant de la décision dans le système source WinCI-TGI",
              "example": "idExemple"
            },
            "indicateurQPC": {
              "type": "boolean",
              "description": "Indicateur QPC",
              "example": false
            }
          },
          "required": [
            "nomJuridiction",
            "idJuridiction",
            "numeroRegistre",
            "numeroRoleGeneral",
            "codeService",
            "libelleService",
            "dateDecision",
            "codeDecision",
            "libelleCodeDecision",
            "codeNAC",
            "libelleNAC",
            "decisionPublique",
            "recommandationOccultation",
            "selection",
            "matiereDeterminee",
            "pourvoiLocal",
            "pourvoiCourDeCassation",
            "debatPublic"
          ]
        },
        "CollectDto": {
          "type": "object",
          "properties": {
            "decisionIntegre": {
              "type": "string",
              "format": "binary",
              "description": "Décision intègre au format wordperfect."
            },
            "metadonnees": {
              "description": "Metadonnées associées à la décision intègre.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/MetadonneesDto"
                }
              ]
            }
          },
          "required": [
            "decisionIntegre",
            "metadonnees"
          ]
        }
      }
    }
  }